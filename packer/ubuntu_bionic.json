{
  "builders": [
    {
      "boot_command": "<esc><wait><esc><wait><enter><wait>/install/vmlinuz auto console-setup/ask_detect=false console-setup/layoutcode=us console-setup/modelcode=pc105 debconf/frontend=noninteractive debian-installer=en_US fb=false initrd=/install/initrd.gz kbd-chooser/method=us keyboard-configuration/layout=USA keyboard-configuration/variant=USA locale=en_US netcfg/get_domain=vm netcfg/get_hostname=vagrant grub-installer/bootdev=/dev/sda noapic preseed/url=http://{{ .HTTPIP }}:{{ .HTTPPort }}/preseed.cfg -- <enter><wait>",
      "boot_wait": "10s",
      "guest_additions_path": "VBoxGuestAdditions_{{.Version}}.iso",
      "guest_os_type": "Ubuntu_64",
      "hard_drive_interface": "sata",
      "sata_port_count": "8",
      "headless": true,
      "http_directory": "packer/http",
      "iso_checksum": "a5b0ea5918f850124f3d72ef4b85bda82f0fcd02ec721be19c1a6952791c8ee8",
      "iso_checksum_type": "sha256",
      "iso_url": "http://cdimage.ubuntu.com/ubuntu/releases/bionic/release/ubuntu-18.04.1-server-amd64.iso",
      "shutdown_command": "echo 'shutdown -P now' > shutdown.sh; echo 'vagrant'|sudo -S sh 'shutdown.sh'",
      "ssh_password": "vagrant",
      "ssh_port": 22,
      "ssh_username": "vagrant",
      "ssh_wait_timeout": "10000s",
      "type": "virtualbox-iso",
      "vboxmanage": [
        [
          "modifyvm",
          "{{.Name}}",
          "--memory",
          "2048"
        ],
        [
          "modifyvm",
          "{{.Name}}",
          "--cpus",
          "1"
        ]
      ],
      "virtualbox_version_file": ".vbox_version",
      "vm_name": "packer-virtualbox-iso-ubuntu-18.04.1"
    }
  ],
  "provisioners": [
    {
      "override": {
        "virtualbox-iso": {
          "execute_command": "echo 'vagrant' | sudo -S sh '{{ .Path }}'"
        }
      },
      "expect_disconnect": true,
      "scripts": [
        "packer/setup_1.sh"
      ],
      "type": "shell"
    },
    {
      "expect_disconnect": true,
      "scripts": [
        "packer/setup_2.sh"
      ],
      "type": "shell"
    },
    {
        "type": "ansible",
        "playbook_file": "./playbook.yml",
        "extra_arguments": ["-e", "ansible_python_interpreter=/usr/bin/python3", "-vvvv"]
    }
  ]
}

